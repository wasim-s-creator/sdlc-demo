\name: Auto Code Summary

on:
  push:
    branches:
      - "wasim"
      - "unioun"

permissions:
  contents: read
  issues: write

jobs:
  summarize:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout (full history)
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.x"

      - name: Install analysis tools
        run: |
          pip install flake8 pylint mypy black isort

      - name: Run summarizer
        run: |
          python3 scripts/summarize_changes.py

      - name: Run analyzer (syntax + lint + runtime check)
        run: |
          python3 scripts/analyze_code.py || true   # prevent pipeline from failing

      - name: Merge outputs
        run: |
          mkdir -p outputs
          branch=$(echo "${GITHUB_REF#refs/heads/}")
          sha=$(echo "${GITHUB_SHA}" | cut -c1-7)
          summary_file="outputs/summary_${branch}_${sha}.md"
          analysis_file="outputs/analysis_${branch}_${sha}.md"
          merged_file="outputs/final_${branch}_${sha}.md"

          echo "# Auto Summary + Code Analysis" > $merged_file

          if [ -f "$summary_file" ]; then
            cat "$summary_file" >> $merged_file
          else
            echo "⚠️ No summary file found" >> $merged_file
          fi

          if [ -f "$analysis_file" ]; then
            cat "$analysis_file" >> $merged_file
          else
            echo "⚠️ No analysis file found" >> $merged_file
          fi

          # Always append Suggested Fixes section
          echo -e "\n## ✅ Suggested Fixes\n<font color='green'>No fixes provided yet</font>" >> $merged_file

      - name: Create issue with results
        uses: actions/github-script@v6
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const fs = require('fs');
            const branch = process.env.GITHUB_REF.replace('refs/heads/','');
            const sha = (process.env.GITHUB_SHA || '').slice(0,7);
            const outPath = `outputs/final_${branch}_${sha}.md`;
            const body = fs.existsSync(outPath) ? fs.readFileSync(outPath, 'utf8') : "No summary generated.";
            await github.rest.issues.create({
              owner: context.repo.owner,
              repo: context.repo.repo,
              title: `Auto summary + analysis — ${branch} @ ${sha}`,
              body
            });
